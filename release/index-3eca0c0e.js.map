{"version":3,"file":"index-3eca0c0e.js","sources":["../src/ui/ChannelAvatar/index.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport './index.scss';\n\nimport Avatar from '../Avatar/index';\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\nimport * as utils from './utils';\n\ninterface Props {\n  channel: SendBird.GroupChannel;\n  userId: string;\n  theme: string;\n  width?: number,\n  height?: number,\n}\n\nfunction ChannelAvatar({\n  channel,\n  userId,\n  theme,\n  width = 56,\n  height = 56,\n}: Props): JSX.Element{\n  const { isBroadcast } = channel;\n  const memoizedAvatar = useMemo(() => (\n    isBroadcast\n      ? (\n        utils.useDefaultAvatar(channel)\n          ? (\n            <div\n              className=\"sendbird-chat-header--default-avatar\"\n              style={{\n                width,\n                height,\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Icon\n                type={IconTypes.BROADCAST}\n                fillColor={IconColors.CONTENT}\n                width={width * 0.575}\n                height={height * 0.575}\n              />\n            </div>\n          )\n          : (\n            <Avatar\n              className=\"sendbird-chat-header--avatar--broadcast-channel\"\n              src={utils.getChannelAvatarSource(channel, userId)}\n              width={width}\n              height={height}\n              alt={channel.name}\n            />\n          )\n      )\n      : (\n        <Avatar\n          className=\"sendbird-chat-header--avatar--group-channel\"\n          src={utils.getChannelAvatarSource(channel, userId)}\n          width={`${width}px`}\n          height={`${height}px`}\n          alt={channel.name}\n        />\n      )\n  ),[channel.members, channel.coverUrl, theme]);\n  return (\n    <>{ memoizedAvatar }</>\n  );\n}\n\nexport default ChannelAvatar;\n"],"names":["ChannelAvatar","_a","channel","userId","theme","_b","width","_c","height","isBroadcast","memoizedAvatar","useMemo","utils","display","justifyContent","alignItems","IconTypes","BROADCAST","IconColors","CONTENT","name","members","coverUrl"],"mappings":";;;;AAgBA,SAASA,aAAT,CAAuBC,EAAvB;MACEC,OAAO;MACPC,MAAM;MACNC,KAAK;MACLC;MAAAC,KAAK,mBAAG;MACRC;MAAAC,MAAM,mBAAG;AAED,MAAAC,WAAW,GAAKP,OAAO,YAAvB;AACR,MAAMQ,cAAc,GAAGC,OAAO,CAAC;AAAM,WACnCF,WAAW,GAEPG,gBAAA,CAAuBV,OAAvB,IAEI;AACE,MAAA,SAAS,EAAC,sCADZ;AAEE,MAAA,KAAK,EAAE;AACLI,QAAAA,KAAK,OADA;AAELE,QAAAA,MAAM,QAFD;AAGLK,QAAAA,OAAO,EAAE,MAHJ;AAILC,QAAAA,cAAc,EAAE,QAJX;AAKLC,QAAAA,UAAU,EAAE;AALP;AAFT,OAUE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEC,SAAS,CAACC,SADlB;AAEE,MAAA,SAAS,EAAEC,UAAU,CAACC,OAFxB;AAGE,MAAA,KAAK,EAAEb,KAAK,GAAG,KAHjB;AAIE,MAAA,MAAM,EAAEE,MAAM,GAAG;AAJnB,MAVF,CAFJ,GAqBI,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,iDADZ;AAEE,MAAA,GAAG,EAAEI,sBAAA,CAA6BV,OAA7B,EAAsCC,MAAtC,CAFP;AAGE,MAAA,KAAK,EAAEG,KAHT;AAIE,MAAA,MAAM,EAAEE,MAJV;AAKE,MAAA,GAAG,EAAEN,OAAO,CAACkB;AALf,MAvBG,GAiCP,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,6CADZ;AAEE,MAAA,GAAG,EAAER,sBAAA,CAA6BV,OAA7B,EAAsCC,MAAtC,CAFP;AAGE,MAAA,KAAK,EAAKG,KAAK,OAHjB;AAIE,MAAA,MAAM,EAAKE,MAAM,OAJnB;AAKE,MAAA,GAAG,EAAEN,OAAO,CAACkB;AALf,MAlC+B;AA0CpC,GA1C6B,EA0C5B,CAAClB,OAAO,CAACmB,OAAT,EAAkBnB,OAAO,CAACoB,QAA1B,EAAoClB,KAApC,CA1C4B,CAA9B;AA2CA,SACE,0CAAIM,cAAJ,CADF;AAGD;;;;"}